<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_L_P_L_cargo_class_AA_base</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Declaring all varables

//ratation speed
rspeed = .7;

//Fuel capasity
fuel = 85;

//Throttle 0-100 (muiltiplyer of force factor
throttle = 0;

//Determinate of how powerful the engines are
forcefacter = .0000008;

//Speed at which fuel is used
fuel_comp_rate = .00004;

//garvity
grav = 0;

//orbit speed
hspeed = .25;

//A cheacking vareable allowing only one vertical speed cheack to be run(only the best result)
landingvs = 1;

//A cheacking vareable allowing only one horizontal speed cheack to be run(onely the best result)
landinghs = 1;

//Cheacking for a good landing, must equal two(both V and H speed must be with in condition)
good_landing = 0;

//Cheaking for a good landing, must equal one(if either V or H speed is out side of safe zone this will run)
hard_landing = 0;

//Cheacking if the landing is so horrible, that the fuel tank will crack/ be smashed after tipping(will run if dead is one)
dead = 0;

//Only allowing one landing message to display at one time
landing_message = 1;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rocket out of fuel 

//Value hold
cargo_fuel = obj_L_P_L_cargo_class_AA

//Hard lock, prevents engines from being used when out of fuel
if(cargo_fuel &lt; .000001){
forcefacter = 0;
throttle = 0;
sprite_index = spr_L_P_L_cargo_class_AA_base
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Ship Ratation

//smothly rotate the ship to point at the mouse

//Value holders

mx = mouse_x
my = mouse_y

pointdir = point_direction(x, y, mx, my)

//Ratation code

image_angle += sin(degtorad(pointdir - image_angle)) * rspeed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Engine control

   
//Applying throttle    
forcefacter_actual = forcefacter*throttle;

//Applying throttle of fuel consumpution
fuel_comps_rate = (fuel_comp_rate * (-throttle));

//Changing calue of fuel stored
fuel += fuel_comps_rate;


//Changing sprite based on throttle
if((throttle &lt; .5) &amp;&amp; ((-.1) &lt; throttle)){
sprite_index = spr_L_P_L_cargo_class_AA_base;
}

    if((throttle &lt; 20.5) &amp;&amp; (.5 &lt; throttle)){
    sprite_index = spr_L_P_L_cargo_class_AA_20;
    }
    
if((throttle &lt; 40.5) &amp;&amp; (20.5 &lt; throttle)){
sprite_index = spr_L_P_L_cargo_class_AA_40
}

    if((throttle &lt; 60.5) &amp;&amp; (40.5 &lt; throttle)){
    sprite_index = spr_L_P_L_cargo_class_AA_60
    }
    
if((throttle &lt; 80.5) &amp;&amp; (60.5 &lt; throttle)){
sprite_index = spr_L_P_L_cargo_class_AA_80
}

    if((throttle &lt; 100.5) &amp;&amp; (80.5 &lt; throttle)){
    sprite_index = spr_L_P_L_cargo_class_AA_100
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>107</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_gravity</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>point_direction(x,y,mouse_x,mouse_y)</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>forcefacter_actual</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Lunar gravity


///Applying Gravity to LPL

if(0&lt;y&lt;76.5){
grav = .000001;
}

    if(76.6&lt;y&lt;153){
    grav = .000002;
    }
    
if(153.1&lt;y&lt;229.5){
grav = .000004;
}

    if(229.6&lt;y&lt;306){
    grav = .000006;
    }
    
if(306.1&lt;y&lt;382.5){
grav = .000008;
}

    if(382.6&lt;y&lt;459){
    grav = .00001;
    }
    
if(459.1&lt;y&lt;535.5){
grav = .000012;
}

    if(535.6&lt;y&lt;612){
    grav = .000014;
    }
    
if(612.1&lt;y&lt;688.5){
grav = .000016;
}

    if(688.6&lt;y&lt;765){
    grav = .000018;
    }
    
vspeed += grav; 
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Landing messages

//catastrophic failure of jakob to land correctly
//restarts the room so you can try again
if((dead &gt; .9) &amp;&amp; (landing_message = 1)){
show_message("You have caused substatial damage to the lander");
landing_message = 0;
room_restart()
}

    //hard landing    
    if((hard_landing &gt; .9) &amp;&amp; (landing_message = 1)){
    show_message("hard landing");
    landing_message = 0;
    room_goto(cargo_lander_rover_mission);
    }
    
//good landing
if((good_landing = 2) &amp;&amp; (landing_message = 1)){
show_message("good landing");
landing_message = 0;
room_goto(cargo_lander_rover_mission);
}   
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_mock_landing_creater">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>









///Cheacking VS landing

//shorting the verable to make it easer to handle
vs = vspeed;

//cheacking for a good landing 
if((vs&lt;.012)){
good_landing += 1;
}
    //Cheacking for a hard landing
    if((vs&gt;.012) &amp;&amp; (vs&lt;.0225)){
    hard_landing += 1;
    }
//cheacking for a explotion(dead)
if((vs&gt;.0225) ){
dead += 1;
}

///Cheacking landing HS

//shortaning the verable to make it easer to handle
hs = hspeed;

//cheackig for a good landing
if((hs&lt;.005)){
good_landing += 1;
}
    //Cheacking for a hard landing
    if((hs&gt;.005) &amp;&amp; (hs&lt;.01)){
    hard_landing += 1;
    } 
//Cheacking for a tip(dead)
if((hs&gt;.01)){
dead += 1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="61">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kill throttle

// killing the throttel if the mouse wheel is flicked down
throttle = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="60">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Full throttle

//Maxing out the throttel when the mouse wheel is flicked up
throttle = 100
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="51">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Throttle Down 

//Throtteling down when holding the right mouse button
if(throttle &gt; 0)
{
throttle += (-.5)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rocket Thrust

//Throtteling up When holding the left mouse
if(throttle &lt; 100)
{
throttle +=.5
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
