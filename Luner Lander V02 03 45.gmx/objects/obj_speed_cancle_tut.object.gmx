<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setting display messages timer

dont_die = 60; // two seconds

part_one = 120; // 5 seconds

fine = 180; // seven seconds

coms = 240; // ten seconds

numbers = 300; // twelve seconds

safe_landing = 360; // fourteen seconds

sim = 420; // sixteen seconds

ship_control = 480; // nineteen seconds

display = 540; //twentyone seconds

display_once = 1; // will only display messages once

f1 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Countdown and display of messages
f1 = keyboard_check(vk_enter)
//display tutorial once

//Subtracting 60 every second from timers 
//(will pan out to be displayed every couple seconds

while( f1 = 1){
dont_die += -1;

part_one += -1;

fine += -1;

coms += -1;

numbers += -1;

safe_landing += -1;

sim += -1;

ship_control += -1;

display += -1; 


//Displaying messages linked to timers

if(dont_die &lt; 0){
show_message("Okay, this is easy, don’t die.");
}

    if(part_one &lt; 0){
    show_message("That’s part one, 
    and yes that four thousand paged dictionary you had five minute to read before lunch had the fifty thousand other parts that you need to know.");
    }

if(fine &lt; 0){
show_message("But you’ll be fine, just as long as you never forget part one, don’t die! (I hope)");
}

    if(coms &lt; 0){
    show_message("Now I can hear you say (Its good I can hear you it means those brick heads we call engineers didn’t blowup your com set), how do I not die.");
    }
    
if(numbers &lt; 0){
show_message("Good question, and if you don’t want to die, remember these numbers 
12 M/S vertical speed
4 M/S Horizontal speed");
}

    if(safe_landing &lt; 0){
    show_message("That is the safe landing speed for a first class training lander for the lunar surface.
It won’t be a soft landing, however you, and the lander(this one) will be fine, as you start landing heavier lander with more delicate cargo you will have to land softer, but, none of this will matter if you don’t follow rule one on this decent.");
    }
    
if(sim &lt; 0){
show_message("However that is only for landing. To complete this simulation you must get both your vertical speed and horizontal speed to bellow 1 M/s");
}

    if(ship_control &lt; 0){
    show_message("Okay to slow the ship you must angle the engines facing the way you are going and, burn them to cancel out the speed. Remember These are not an all or thing deal, you could burn a 20% power to cancel out a little amount of speed (such as a 1 m/s drift to the right
    Use the left mouse button to throttle up and the right mouse button to throttle down
    scroll up using the mouse whell to max out throttle and scroll down to kill throttle completly)");
    }

if(display &lt; 0){
show_message("So I’m almost done talking, I am just going to walk you through your display.
The two numbers next to arrows off to the left are your horizontal and vertical speed. 
They display in meters per second

Then the two number above you ship are fuel and throttle

Fuel is on top, if you run out of fuel you die
You don’t need to worry about saving fuel there is a moon base not far from hear with fuel

Then the next number is the percentage throttle of your engines

And the last indicator, is the direction your a currently traveling

To slow down you must point the engines the same direction as this arrow");

f1 = 0
}
}
obj_L_P_L.hspeed = .45;
obj_L_P_L.vspeed = .50;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Speed cheacking 

hs = obj_L_P_L.hspeed
vs = obj_L_P_L.vspeed

if((hs &lt; .01) &amp;&amp; (hs &gt; -.01) &amp;&amp; (vs &lt; .01) &amp;&amp; (vs &gt; -.01) &amp;&amp; (display &lt; 1)){
show_message("Nice Job, if you can do that well on your next landing you will be just fine");
obj_L_P_L.fuel = 75;
room_goto(First_Tutorial_Landing)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
